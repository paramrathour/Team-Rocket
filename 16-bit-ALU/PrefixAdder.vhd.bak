library ieee;
use ieee.std_logic_1164.all;

entity andgate is
port(a, b: in bit;
     z: out bit);
end andgate;
architecture e1 of andgate is
begin
z <= a and b;
end e1;


entity notgate is
port(a: in bit;
     z: out bit);
end notgate;
architecture e2 of notgate is
begin
z <= not a;
end e2;


entity orgate is
port(a, b: in bit;
     z: out bit);
end orgate;
architecture e3 of orgate is
begin
z <= a or b;
end e3;


entity xorgate is
port(a, b: in bit;
     z: out bit);
end orgate;

architecture e4 of xorgate is

component andgate
port(a, b: in bit;
     z: out bit);
end component;
component orgate
port(a, b: in bit;
     z: out bit);
end component;
component notgate
port(a: in bit;
     z: out bit);
end component;

signal nota,notb,s0,s1: bit;
begin
u0: notgate 
	portmap(a, nota);
u1: notgate 
	portmap(b, notb);
u2: andgate
	portmap(a, notb, s0);
u3: andgate
	portmap(b, nota, s1);
u4: orgate
	portmap(s0, s1, z);
end e4;



entity gpGenerator is
	port(ABus: in std_logic_vector(15 downto 0);
	  BBus: in std_logic_vector(15 downto 0);
	  gBus: out std_logic_vector(15 downto 0);
	  pBus: out std_logic_vector(15 downto 0));
end gpGenerator;
architecture e5 of gpGenerator is

component andgate
port(a, b: in bit;
     z: out bit);
end component;
component xorgate
port(a, b: in bit;
     z: out bit);
end component;e









  

